/*
 * Generated API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ml.raketeufo.thirestbridge.api.model;

import java.io.Serializable;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import ml.raketeufo.thirestbridge.api.model.Pruefer;
import org.threeten.bp.LocalDateTime;
/**
 * Exam
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-05T00:54:42.271211+02:00[Europe/Berlin]")
public class Exam implements Serializable {
  @SerializedName("anmeldeCode")
  private String anmeldeCode = null;

  @SerializedName("anmeldeZeit")
  private LocalDateTime anmeldeZeit = null;

  @SerializedName("anmerkung")
  private String anmerkung = null;

  @SerializedName("art")
  private String art = null;

  @SerializedName("ausserhalbZeitraum")
  private Boolean ausserhalbZeitraum = null;

  @SerializedName("hilfsmittel")
  private List<String> hilfsmittel = null;

  @SerializedName("katalogId")
  private String katalogId = null;

  @SerializedName("pruefer")
  private List<Pruefer> pruefer = null;

  @SerializedName("rooms")
  private List<String> rooms = null;

  @SerializedName("seat")
  private String seat = null;

  @SerializedName("semester")
  private String semester = null;

  @SerializedName("studiengang")
  private String studiengang = null;

  @SerializedName("titel")
  private String titel = null;

  @SerializedName("zeit")
  private LocalDateTime zeit = null;

  public Exam anmeldeCode(String anmeldeCode) {
    this.anmeldeCode = anmeldeCode;
    return this;
  }

   /**
   * Get anmeldeCode
   * @return anmeldeCode
  **/
  @Schema(description = "")
  public String getAnmeldeCode() {
    return anmeldeCode;
  }

  public void setAnmeldeCode(String anmeldeCode) {
    this.anmeldeCode = anmeldeCode;
  }

  public Exam anmeldeZeit(LocalDateTime anmeldeZeit) {
    this.anmeldeZeit = anmeldeZeit;
    return this;
  }

   /**
   * Get anmeldeZeit
   * @return anmeldeZeit
  **/
  @Schema(description = "")
  public LocalDateTime getAnmeldeZeit() {
    return anmeldeZeit;
  }

  public void setAnmeldeZeit(LocalDateTime anmeldeZeit) {
    this.anmeldeZeit = anmeldeZeit;
  }

  public Exam anmerkung(String anmerkung) {
    this.anmerkung = anmerkung;
    return this;
  }

   /**
   * Get anmerkung
   * @return anmerkung
  **/
  @Schema(description = "")
  public String getAnmerkung() {
    return anmerkung;
  }

  public void setAnmerkung(String anmerkung) {
    this.anmerkung = anmerkung;
  }

  public Exam art(String art) {
    this.art = art;
    return this;
  }

   /**
   * Get art
   * @return art
  **/
  @Schema(description = "")
  public String getArt() {
    return art;
  }

  public void setArt(String art) {
    this.art = art;
  }

  public Exam ausserhalbZeitraum(Boolean ausserhalbZeitraum) {
    this.ausserhalbZeitraum = ausserhalbZeitraum;
    return this;
  }

   /**
   * Get ausserhalbZeitraum
   * @return ausserhalbZeitraum
  **/
  @Schema(description = "")
  public Boolean isAusserhalbZeitraum() {
    return ausserhalbZeitraum;
  }

  public void setAusserhalbZeitraum(Boolean ausserhalbZeitraum) {
    this.ausserhalbZeitraum = ausserhalbZeitraum;
  }

  public Exam hilfsmittel(List<String> hilfsmittel) {
    this.hilfsmittel = hilfsmittel;
    return this;
  }

  public Exam addHilfsmittelItem(String hilfsmittelItem) {
    if (this.hilfsmittel == null) {
      this.hilfsmittel = new ArrayList<String>();
    }
    this.hilfsmittel.add(hilfsmittelItem);
    return this;
  }

   /**
   * Get hilfsmittel
   * @return hilfsmittel
  **/
  @Schema(description = "")
  public List<String> getHilfsmittel() {
    return hilfsmittel;
  }

  public void setHilfsmittel(List<String> hilfsmittel) {
    this.hilfsmittel = hilfsmittel;
  }

  public Exam katalogId(String katalogId) {
    this.katalogId = katalogId;
    return this;
  }

   /**
   * Get katalogId
   * @return katalogId
  **/
  @Schema(description = "")
  public String getKatalogId() {
    return katalogId;
  }

  public void setKatalogId(String katalogId) {
    this.katalogId = katalogId;
  }

  public Exam pruefer(List<Pruefer> pruefer) {
    this.pruefer = pruefer;
    return this;
  }

  public Exam addPrueferItem(Pruefer prueferItem) {
    if (this.pruefer == null) {
      this.pruefer = new ArrayList<Pruefer>();
    }
    this.pruefer.add(prueferItem);
    return this;
  }

   /**
   * Get pruefer
   * @return pruefer
  **/
  @Schema(description = "")
  public List<Pruefer> getPruefer() {
    return pruefer;
  }

  public void setPruefer(List<Pruefer> pruefer) {
    this.pruefer = pruefer;
  }

  public Exam rooms(List<String> rooms) {
    this.rooms = rooms;
    return this;
  }

  public Exam addRoomsItem(String roomsItem) {
    if (this.rooms == null) {
      this.rooms = new ArrayList<String>();
    }
    this.rooms.add(roomsItem);
    return this;
  }

   /**
   * Get rooms
   * @return rooms
  **/
  @Schema(description = "")
  public List<String> getRooms() {
    return rooms;
  }

  public void setRooms(List<String> rooms) {
    this.rooms = rooms;
  }

  public Exam seat(String seat) {
    this.seat = seat;
    return this;
  }

   /**
   * Get seat
   * @return seat
  **/
  @Schema(description = "")
  public String getSeat() {
    return seat;
  }

  public void setSeat(String seat) {
    this.seat = seat;
  }

  public Exam semester(String semester) {
    this.semester = semester;
    return this;
  }

   /**
   * Get semester
   * @return semester
  **/
  @Schema(description = "")
  public String getSemester() {
    return semester;
  }

  public void setSemester(String semester) {
    this.semester = semester;
  }

  public Exam studiengang(String studiengang) {
    this.studiengang = studiengang;
    return this;
  }

   /**
   * Get studiengang
   * @return studiengang
  **/
  @Schema(description = "")
  public String getStudiengang() {
    return studiengang;
  }

  public void setStudiengang(String studiengang) {
    this.studiengang = studiengang;
  }

  public Exam titel(String titel) {
    this.titel = titel;
    return this;
  }

   /**
   * Get titel
   * @return titel
  **/
  @Schema(description = "")
  public String getTitel() {
    return titel;
  }

  public void setTitel(String titel) {
    this.titel = titel;
  }

  public Exam zeit(LocalDateTime zeit) {
    this.zeit = zeit;
    return this;
  }

   /**
   * Get zeit
   * @return zeit
  **/
  @Schema(description = "")
  public LocalDateTime getZeit() {
    return zeit;
  }

  public void setZeit(LocalDateTime zeit) {
    this.zeit = zeit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Exam exam = (Exam) o;
    return Objects.equals(this.anmeldeCode, exam.anmeldeCode) &&
        Objects.equals(this.anmeldeZeit, exam.anmeldeZeit) &&
        Objects.equals(this.anmerkung, exam.anmerkung) &&
        Objects.equals(this.art, exam.art) &&
        Objects.equals(this.ausserhalbZeitraum, exam.ausserhalbZeitraum) &&
        Objects.equals(this.hilfsmittel, exam.hilfsmittel) &&
        Objects.equals(this.katalogId, exam.katalogId) &&
        Objects.equals(this.pruefer, exam.pruefer) &&
        Objects.equals(this.rooms, exam.rooms) &&
        Objects.equals(this.seat, exam.seat) &&
        Objects.equals(this.semester, exam.semester) &&
        Objects.equals(this.studiengang, exam.studiengang) &&
        Objects.equals(this.titel, exam.titel) &&
        Objects.equals(this.zeit, exam.zeit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anmeldeCode, anmeldeZeit, anmerkung, art, ausserhalbZeitraum, hilfsmittel, katalogId, pruefer, rooms, seat, semester, studiengang, titel, zeit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Exam {\n");

    sb.append("    anmeldeCode: ").append(toIndentedString(anmeldeCode)).append("\n");
    sb.append("    anmeldeZeit: ").append(toIndentedString(anmeldeZeit)).append("\n");
    sb.append("    anmerkung: ").append(toIndentedString(anmerkung)).append("\n");
    sb.append("    art: ").append(toIndentedString(art)).append("\n");
    sb.append("    ausserhalbZeitraum: ").append(toIndentedString(ausserhalbZeitraum)).append("\n");
    sb.append("    hilfsmittel: ").append(toIndentedString(hilfsmittel)).append("\n");
    sb.append("    katalogId: ").append(toIndentedString(katalogId)).append("\n");
    sb.append("    pruefer: ").append(toIndentedString(pruefer)).append("\n");
    sb.append("    rooms: ").append(toIndentedString(rooms)).append("\n");
    sb.append("    seat: ").append(toIndentedString(seat)).append("\n");
    sb.append("    semester: ").append(toIndentedString(semester)).append("\n");
    sb.append("    studiengang: ").append(toIndentedString(studiengang)).append("\n");
    sb.append("    titel: ").append(toIndentedString(titel)).append("\n");
    sb.append("    zeit: ").append(toIndentedString(zeit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
