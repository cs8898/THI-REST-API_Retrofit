/*
 * Generated API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ml.raketeufo.thirestbridge.api.model;

import java.io.Serializable;
import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import ml.raketeufo.thirestbridge.api.model.Adresse;
import ml.raketeufo.thirestbridge.api.model.Pruefungsordnung;
import ml.raketeufo.thirestbridge.api.model.Rueckmeldung;
/**
 * UserInformation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-07-05T00:54:42.271211+02:00[Europe/Berlin]")
public class UserInformation implements Serializable {
  @SerializedName("addresse")
  private Adresse addresse = null;

  @SerializedName("bibliotheksNummer")
  private String bibliotheksNummer = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("fachrichtung")
  private String fachrichtung = null;

  @SerializedName("internalEmail")
  private String internalEmail = null;

  @SerializedName("matrikelNummer")
  private String matrikelNummer = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("printerCredit")
  private Double printerCredit = null;

  @SerializedName("pruefungsordnung")
  private Pruefungsordnung pruefungsordnung = null;

  @SerializedName("rueckmeldung")
  private Rueckmeldung rueckmeldung = null;

  @SerializedName("schwerpunkte")
  private List<String> schwerpunkte = null;

  @SerializedName("studiengang")
  private String studiengang = null;

  @SerializedName("studiengruppe")
  private String studiengruppe = null;

  @SerializedName("telefon")
  private String telefon = null;

  @SerializedName("user")
  private String user = null;

  @SerializedName("vorname")
  private String vorname = null;

  public UserInformation addresse(Adresse addresse) {
    this.addresse = addresse;
    return this;
  }

   /**
   * Get addresse
   * @return addresse
  **/
  @Schema(description = "")
  public Adresse getAddresse() {
    return addresse;
  }

  public void setAddresse(Adresse addresse) {
    this.addresse = addresse;
  }

  public UserInformation bibliotheksNummer(String bibliotheksNummer) {
    this.bibliotheksNummer = bibliotheksNummer;
    return this;
  }

   /**
   * Get bibliotheksNummer
   * @return bibliotheksNummer
  **/
  @Schema(description = "")
  public String getBibliotheksNummer() {
    return bibliotheksNummer;
  }

  public void setBibliotheksNummer(String bibliotheksNummer) {
    this.bibliotheksNummer = bibliotheksNummer;
  }

  public UserInformation email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserInformation fachrichtung(String fachrichtung) {
    this.fachrichtung = fachrichtung;
    return this;
  }

   /**
   * Get fachrichtung
   * @return fachrichtung
  **/
  @Schema(description = "")
  public String getFachrichtung() {
    return fachrichtung;
  }

  public void setFachrichtung(String fachrichtung) {
    this.fachrichtung = fachrichtung;
  }

  public UserInformation internalEmail(String internalEmail) {
    this.internalEmail = internalEmail;
    return this;
  }

   /**
   * Get internalEmail
   * @return internalEmail
  **/
  @Schema(description = "")
  public String getInternalEmail() {
    return internalEmail;
  }

  public void setInternalEmail(String internalEmail) {
    this.internalEmail = internalEmail;
  }

  public UserInformation matrikelNummer(String matrikelNummer) {
    this.matrikelNummer = matrikelNummer;
    return this;
  }

   /**
   * Get matrikelNummer
   * @return matrikelNummer
  **/
  @Schema(description = "")
  public String getMatrikelNummer() {
    return matrikelNummer;
  }

  public void setMatrikelNummer(String matrikelNummer) {
    this.matrikelNummer = matrikelNummer;
  }

  public UserInformation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UserInformation printerCredit(Double printerCredit) {
    this.printerCredit = printerCredit;
    return this;
  }

   /**
   * Get printerCredit
   * @return printerCredit
  **/
  @Schema(description = "")
  public Double getPrinterCredit() {
    return printerCredit;
  }

  public void setPrinterCredit(Double printerCredit) {
    this.printerCredit = printerCredit;
  }

  public UserInformation pruefungsordnung(Pruefungsordnung pruefungsordnung) {
    this.pruefungsordnung = pruefungsordnung;
    return this;
  }

   /**
   * Get pruefungsordnung
   * @return pruefungsordnung
  **/
  @Schema(description = "")
  public Pruefungsordnung getPruefungsordnung() {
    return pruefungsordnung;
  }

  public void setPruefungsordnung(Pruefungsordnung pruefungsordnung) {
    this.pruefungsordnung = pruefungsordnung;
  }

  public UserInformation rueckmeldung(Rueckmeldung rueckmeldung) {
    this.rueckmeldung = rueckmeldung;
    return this;
  }

   /**
   * Get rueckmeldung
   * @return rueckmeldung
  **/
  @Schema(description = "")
  public Rueckmeldung getRueckmeldung() {
    return rueckmeldung;
  }

  public void setRueckmeldung(Rueckmeldung rueckmeldung) {
    this.rueckmeldung = rueckmeldung;
  }

  public UserInformation schwerpunkte(List<String> schwerpunkte) {
    this.schwerpunkte = schwerpunkte;
    return this;
  }

  public UserInformation addSchwerpunkteItem(String schwerpunkteItem) {
    if (this.schwerpunkte == null) {
      this.schwerpunkte = new ArrayList<String>();
    }
    this.schwerpunkte.add(schwerpunkteItem);
    return this;
  }

   /**
   * Get schwerpunkte
   * @return schwerpunkte
  **/
  @Schema(description = "")
  public List<String> getSchwerpunkte() {
    return schwerpunkte;
  }

  public void setSchwerpunkte(List<String> schwerpunkte) {
    this.schwerpunkte = schwerpunkte;
  }

  public UserInformation studiengang(String studiengang) {
    this.studiengang = studiengang;
    return this;
  }

   /**
   * Get studiengang
   * @return studiengang
  **/
  @Schema(description = "")
  public String getStudiengang() {
    return studiengang;
  }

  public void setStudiengang(String studiengang) {
    this.studiengang = studiengang;
  }

  public UserInformation studiengruppe(String studiengruppe) {
    this.studiengruppe = studiengruppe;
    return this;
  }

   /**
   * Get studiengruppe
   * @return studiengruppe
  **/
  @Schema(description = "")
  public String getStudiengruppe() {
    return studiengruppe;
  }

  public void setStudiengruppe(String studiengruppe) {
    this.studiengruppe = studiengruppe;
  }

  public UserInformation telefon(String telefon) {
    this.telefon = telefon;
    return this;
  }

   /**
   * Get telefon
   * @return telefon
  **/
  @Schema(description = "")
  public String getTelefon() {
    return telefon;
  }

  public void setTelefon(String telefon) {
    this.telefon = telefon;
  }

  public UserInformation user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @Schema(description = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public UserInformation vorname(String vorname) {
    this.vorname = vorname;
    return this;
  }

   /**
   * Get vorname
   * @return vorname
  **/
  @Schema(description = "")
  public String getVorname() {
    return vorname;
  }

  public void setVorname(String vorname) {
    this.vorname = vorname;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserInformation userInformation = (UserInformation) o;
    return Objects.equals(this.addresse, userInformation.addresse) &&
        Objects.equals(this.bibliotheksNummer, userInformation.bibliotheksNummer) &&
        Objects.equals(this.email, userInformation.email) &&
        Objects.equals(this.fachrichtung, userInformation.fachrichtung) &&
        Objects.equals(this.internalEmail, userInformation.internalEmail) &&
        Objects.equals(this.matrikelNummer, userInformation.matrikelNummer) &&
        Objects.equals(this.name, userInformation.name) &&
        Objects.equals(this.printerCredit, userInformation.printerCredit) &&
        Objects.equals(this.pruefungsordnung, userInformation.pruefungsordnung) &&
        Objects.equals(this.rueckmeldung, userInformation.rueckmeldung) &&
        Objects.equals(this.schwerpunkte, userInformation.schwerpunkte) &&
        Objects.equals(this.studiengang, userInformation.studiengang) &&
        Objects.equals(this.studiengruppe, userInformation.studiengruppe) &&
        Objects.equals(this.telefon, userInformation.telefon) &&
        Objects.equals(this.user, userInformation.user) &&
        Objects.equals(this.vorname, userInformation.vorname);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresse, bibliotheksNummer, email, fachrichtung, internalEmail, matrikelNummer, name, printerCredit, pruefungsordnung, rueckmeldung, schwerpunkte, studiengang, studiengruppe, telefon, user, vorname);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserInformation {\n");
    
    sb.append("    addresse: ").append(toIndentedString(addresse)).append("\n");
    sb.append("    bibliotheksNummer: ").append(toIndentedString(bibliotheksNummer)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fachrichtung: ").append(toIndentedString(fachrichtung)).append("\n");
    sb.append("    internalEmail: ").append(toIndentedString(internalEmail)).append("\n");
    sb.append("    matrikelNummer: ").append(toIndentedString(matrikelNummer)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    printerCredit: ").append(toIndentedString(printerCredit)).append("\n");
    sb.append("    pruefungsordnung: ").append(toIndentedString(pruefungsordnung)).append("\n");
    sb.append("    rueckmeldung: ").append(toIndentedString(rueckmeldung)).append("\n");
    sb.append("    schwerpunkte: ").append(toIndentedString(schwerpunkte)).append("\n");
    sb.append("    studiengang: ").append(toIndentedString(studiengang)).append("\n");
    sb.append("    studiengruppe: ").append(toIndentedString(studiengruppe)).append("\n");
    sb.append("    telefon: ").append(toIndentedString(telefon)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    vorname: ").append(toIndentedString(vorname)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
